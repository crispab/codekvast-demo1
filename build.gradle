buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '1.0.0'
sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

//--- Changes to make it work with Codekvast

def codekvastVersion='0.20.0'
configurations { codekvast }
dependencies { codekvast "io.codekvast:codekvast-agent:$codekvastVersion:all" }

bootRepackage {
    // Run the app as an ordinary Gradle application instead of an executable Spring Boot jar or else
    // Codekvast won't find anything. (It does not yet understand Spring Boot's proprietary Ã¼ber-jar format)
    enabled = false
}

apply plugin: 'application'

// Download codekvast-agent.jar to a well-known location...
applicationDistribution.from(configurations.codekvast) { into 'codekvast' }
def codekvastAgent="build/install/${rootProject.name}/codekvast/codekvast-agent-${codekvastVersion}-all.jar"

applicationDefaultJvmArgs = [
        "-Xbootclasspath/a:$codekvastAgent",
        "-javaagent:$codekvastAgent"
]

// Make Heroku do the right thing instead of the standard Spring Boot buildpack stuff...
task stage(dependsOn: ['clean', 'build', 'installDist'])
build.mustRunAfter clean
